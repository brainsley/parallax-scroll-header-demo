// Generated by CoffeeScript 1.5.0
var Header, header;

Header = (function() {

  Header.prototype.activeFactor = null;

  function Header() {
    this.initiateSteps();
    this.initiateHeaderStickynessSwitch();
    this.alterateOpacs();
  }

  Header.prototype.initiateHeaderStickynessSwitch = function() {
    var _this = this;
    return $('.main-container').waypoint(function(dir) {
      if (dir === 'up') {
        return $('.header-container').removeClass('sticky-header');
      } else {
        return $('.header-container').addClass('sticky-header');
      }
    }, {
      offset: 200
    });
  };

  Header.prototype.initiateSteps = function() {
    var new_elem, x, _i, _results;
    _results = [];
    for (x = _i = 0; _i <= 20; x = ++_i) {
      new_elem = $('<div></div>');
      new_elem.addClass('opac-trigger');
      new_elem.data('opac-factor', x);
      $('.header-container').append(new_elem);
      _results.push(new_elem.css({
        top: new_elem.height() * x
      }));
    }
    return _results;
  };

  Header.prototype.translateOpacityAlterations = function(factor) {
    $('.intro .short').css({
      opacity: 0.1 * factor
    });
    return $('.intro .long').css({
      opacity: 1 - 0.1 * factor
    });
  };

  Header.prototype.alterateOpacs = function() {
    var M;
    M = this;
    return $('.opac-trigger').waypoint(function(dir) {
      var value;
      M.activeFactor = $(this);
      if (dir === 'up') {
        M.activeFactor = M.activeFactor.prev();
      }
      if (!M.activeFactor.length) {
        M.activeFactor = $(this);
      }
      value = M.activeFactor.data('opac-factor');
      return M.translateOpacityAlterations(value);
    });
  };

  return Header;

})();

if ($('.header-container').length > 0 && $('.main-container').length > 0) {
  header = new Header;
}
